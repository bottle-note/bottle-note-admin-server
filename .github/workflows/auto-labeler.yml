name: Auto Label Issues with GPT

on:
  issues:
    types: [opened, edited]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      
    steps:
    - name: Get Available Labels
      id: get_labels
      uses: actions/github-script@v7
      with:
        script: |
          const labels = await github.rest.issues.listLabelsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          const labelNames = labels.data.map(label => label.name);
          console.log('Available labels:', labelNames);
          
          // 출력 설정
          core.setOutput('labels', labelNames.join(', '));
          return labelNames;
    
    - name: Get Issue Content
      id: get_issue
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const content = `Title: ${issue.title}\nBody: ${issue.body || ''}`;
          
          core.setOutput('content', content);
          core.setOutput('issue_number', issue.number.toString());
          return content;
    
    - name: Select Labels with GPT
      id: gpt_labels
      uses: cahaseler/openai-chatgpt-action@v1
      with:
        apiKey: ${{ secrets.OPENAI_API_KEY }}
        model: 'gpt-3.5-turbo'
        temperature: 0.3
        max_tokens: 200
        prompt: 'You are a GitHub issue label selector. Return ONLY a JSON array of label names, no other text.'
        input: |
          Available labels: ${{ steps.get_labels.outputs.labels }}
          
          Issue content: ${{ steps.get_issue.outputs.content }}
          
          Select appropriate labels from the available list. Return as JSON array like ["bug", "enhancement"].
    
    - name: Apply Labels
      uses: actions/github-script@v7
      with:
        script: |
          try {
            // GPT 응답에서 JSON 추출
            const response = '${{ steps.gpt_labels.outputs.completion }}';
            const cleanResponse = response.replace(/```json\n?|```\n?/g, '').trim();
            const selectedLabels = JSON.parse(cleanResponse);
            
            if (selectedLabels && selectedLabels.length > 0) {
              console.log('Applying labels:', selectedLabels);
              
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: selectedLabels
              });
              
              console.log('✅ Labels applied successfully!');
            }
          } catch (error) {
            console.error('❌ Error:', error.message);
          }
