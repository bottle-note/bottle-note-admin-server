name: Dev Deploy Workflow

on:
  workflow_dispatch:

concurrency:
  group: "dev-deploy"
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Update submodules
        run: |
          echo "üîÑ Updating git submodules..."
          git submodule update --init --recursive
          git submodule update --remote

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Remote Gradle Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          username: ${{ secrets.DEV_SERVER_USER }}
          password: ${{ secrets.DEV_SERVER_PASSWORD }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            echo "::group::Deploy Setup and Gradle Build"
            cd /home/${{ secrets.DEV_SERVER_USER }}/app/bottle-note-admin-server

            echo "üìù Creating application.yml from secret"
            echo "${{ secrets.APPLICATION_DEV }}" | base64 --decode > src/main/resources/application.yml
            ls -l src/main/resources/application.yml

            echo "‚öôÔ∏è Starting Gradle build"
            set -x
            chmod +x gradlew
            ./gradlew clean build -x asciidoctor -x copyRestDocs
            set +x
            echo "‚úÖ Gradle build completed"
            echo "::endgroup::"

      - name: Remote Docker Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          username: ${{ secrets.DEV_SERVER_USER }}
          password: ${{ secrets.DEV_SERVER_PASSWORD }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            echo "::group::Docker Compose Build and Run"
            cd /home/${{ secrets.DEV_SERVER_USER }}/app/bottle-note-admin-server

            docker stop dev-bottle-note-admin || echo "‚ö†Ô∏è No container to stop"
            docker rm dev-bottle-note-admin || echo "‚ö†Ô∏è No container to remove"

            docker-compose -f docker-compose-dev.yml up -d --no-deps --build dev-bottle-note-admin

            docker ps | grep dev-bottle-note-admin
            echo "::endgroup::"

            docker image prune -f
